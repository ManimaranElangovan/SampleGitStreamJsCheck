manifest:
  version: 1.0

automations:
  js_ai_review:
    if:
      - {{ has.js_changes }}
    run:
      - action: code-review@v1
        args:
          approve_on_LGTM: false
          guidelines: |
            Review ONLY JavaScript diffs. Keep feedback focused; list at most the top 5 issues.
            Do NOT comment on formatting, semicolons, or trivial nits.

            jQuery → modern DOM:
              - $(selector) → document.querySelector / document.querySelectorAll
              - $(el).on('evt', fn) → el.addEventListener('evt', fn)
              - $.ajax / $.get / $.post → fetch (use AbortController for timeout)
              - $(el).addClass/removeClass/toggleClass → el.classList.add/remove/toggle
              - $(document).ready(fn) → document.addEventListener('DOMContentLoaded', fn)
            If new jQuery is introduced, recommend a concise, inline vanilla snippet for that exact usage.

            Compatibility & Polyfills:
              If the diff uses newer features (e.g., optional chaining ?. , nullish ?? ,
              String.prototype.replaceAll, Array.prototype.flat, Promise.any / allSettled,
              Object.hasOwn, Array.fromAsync, fetch, Intl.*), call it out.
              Ask the author to confirm our target browsers; if any target lacks support,
              suggest the minimal polyfill or Babel transform and name the exact feature.

            Safety & good practices:
              - Avoid unsafe innerHTML/outerHTML/insertAdjacentHTML with untrusted data; prefer textContent/DOM APIs or a sanitizer.
              - Prefer const/let over var; prefer === over == when not intentionally doing type coercion.
              - Avoid eval/new Function and inline HTML event handlers (onclick=); use addEventListener.
              - When using fetch, handle errors and timeouts; parse JSON safely.

  js_feature_compat_nudge:
    if:
      - {{ has.js_changes }}
      - {{ source.diff.files | matchDiffLines(regex='^[+].*(\\?\\.|\\?\\?|\\.\\s*replaceAll\\(|\\.\\s*flat\\(|Promise\\.(any|allSettled)|Object\\.hasOwn|Array\\.fromAsync|Intl\\.)') | some }}
    run:
      - action: add-comment@v1
        args:
          once: true
          comment: |
            Compatibility heads-up: the diff includes newer JS features (e.g., `?.`, `??`, `replaceAll`, `flat`,
            `Promise.any/allSettled`, `Object.hasOwn`, `Array.fromAsync`, or `Intl.*`). If any supported browser lacks
            these, please add a small polyfill or ensure our build transpiles them. A one-line note in the PR describing
            which features you covered would help reviewers.

  js_detect_jquery:
    if:
      - {{ has.js_changes }}
      - {{ source.diff.files | matchDiffLines(regex='^[+].*(\\$\\(|jQuery\\(|\\$\\.(ajax|get|post|getJSON)|\\)\\.(on|off|click|each)\\(|\\$\\(\\s*document\\s*\\)\\.ready)') | some }}
    run:
      - action: add-comment@v1
        args:
          once: true
          comment: |
            New jQuery usage was detected in changed JS. Our guideline is to avoid adding jQuery in new code.
            Please refactor to modern DOM APIs (querySelector, addEventListener, fetch, classList, DOMContentLoaded).
            If you paste a specific line here, I can suggest the vanilla equivalent.

has:
  js_changes: {{ files | filter(regex='\\.js$') | some }}
